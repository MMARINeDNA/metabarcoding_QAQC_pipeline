---
title: "Report MURI"
date: '`r format(Sys.time(), "%d %m %Y")`'
format: 
  html: 
    self-contained: true
    df-print: paged
    code-fold: true
    code-tools: true
---

```{r libraries, message=FALSE, warning=FALSE}
library(quarto,warn.conflicts = FALSE)
library(rmarkdown,warn.conflicts = FALSE)
library(phyloseq,warn.conflicts = FALSE)
library(tidyverse,warn.conflicts = FALSE)
library(pander,warn.conflicts = FALSE)
library(pandoc,warn.conflicts = FALSE)
library(ggsci,warn.conflicts = FALSE)
library(ggplot2,warn.conflicts = FALSE)
library(dplyr,warn.conflicts = FALSE)
library(strex,warn.conflicts = FALSE)
library(sqldf,warn.conflicts = FALSE)
library(knitr,warn.conflicts = FALSE)
library(rmdformats,warn.conflicts = FALSE)
library(data.table,warn.conflicts = FALSE)
library(filesstrings,warn.conflicts = FALSE)
library(metagMisc,warn.conflicts = FALSE)
```

### **1. Run performance and filtering summary in terms of read number**

```{r warning=FALSE}

output.files <- list.files("../final_data/rdata_output", full.names = TRUE, pattern = "*.Rdata")

output.list <- list()

for (i in 1:length(output.files)){
load(output.files,  temp_env <- new.env())
output.list <- as.list(temp_env)
}
rm(temp_env)

track <- data.frame()

for (i in 1:length(output.files)){
temp.track <- output.list[["track"]]
track <- rbind(track, temp.track)
rm(temp.track)
}

track.sum <- dplyr::summarise_all(as.data.frame(track), sum)

pander::pander(track.sum, big.mark = ",")

```

```{r Load metadata}
miseq_sheet <- read.csv(paste0("../metadata/SampleSheetUsed.csv"), sep=",",skip = 19)
sample_metadata <- read.csv(paste0("../metadata/Hake_2019_metadata.csv"),row.names = NULL)

miseq_sheet$sampleID <- paste0(sapply(strsplit(miseq_sheet$Sample_ID, "-"),`[`, 2),"-",sapply(strsplit(miseq_sheet$Sample_ID, "-"),`[`, 3))

#When using more than one primer in one run
#md<- miseq_sheet %>% 
#   filter(str_detect(Sample_ID, "DLM1")) 

md<- merge(x = miseq_sheet, y = sample_metadata, by="sampleID", all.x = TRUE)
rownames(md)<-md$Sample_ID
#md <- md[grep(params$marker, rownames(md)), ]
md$depth_class <- with(md, ifelse(depth < 5, '0 m',
                           ifelse(depth >= 40 & depth <= 60, '50 m',
                           ifelse(depth >= 140 & depth <= 160, '150 m',
                           ifelse(depth >= 290 & depth <= 310, '300 m',
                           ifelse(depth >= 490 & depth <= 510, '500 m',
                                                              'controls'))))))
md <- md %>%
  filter(!grepl("NTC", sampleID)) %>%
  filter(!grepl("positive", sampleID))

write.csv(md,file = "../final_data/csv_output/metadata_merged.csv")
```

```{r ASV table}
seqtab.nochim <- as.data.frame(output.list[["cleaned.seqtab.nochim"]])
seqtab.nochim$Sample_ID <- filesstrings::str_before_nth(rownames(seqtab.nochim),"_",1)
seqtab.nochim <- dplyr::relocate(seqtab.nochim, Sample_ID)
rownames(seqtab.nochim)<-seqtab.nochim$Sample_ID
seqtab.nochim<-seqtab.nochim[,!names(seqtab.nochim) %in% ("Sample_ID")]
ASV_mat <- as.matrix(t(seqtab.nochim))
```

```{r Taxonomical table}
taxa <- as.data.frame(output.list[["joined_old_new_taxa"]])
taxa<-taxa[,-1]
rownames(taxa)<-taxa$Sequence
taxa<-as.matrix(taxa[,-1])
```

```{r Build phyloseq object}
ASV<-phyloseq::otu_table(ASV_mat, taxa_are_rows = TRUE)
TAXA<-phyloseq::tax_table(taxa)
MD<-phyloseq::sample_data(md)
ps<-phyloseq::phyloseq(ASV,TAXA,MD)
```

```{r Create taxon table, warning=FALSE, message=FALSE}
ASV.df<-as.data.frame(ASV)%>%
  rownames_to_column(var="seqID") %>% 
  pivot_longer(cols=-seqID,names_to = "Sample_name", values_to = "nReads")
  
TAXA.df<-as.data.frame(TAXA)%>%
  rownames_to_column(var="seqID")

species.site.reads <- ASV.df %>% 
  left_join(TAXA.df, by="seqID") %>% 
  filter(!is.na(Species)) %>% 
  group_by(Sample_name, Species)

species.site.reads <- aggregate(nReads ~ Sample_name + Species, data = species.site.reads, sum)
species.site.reads <- species.site.reads%>% 
   pivot_wider(names_from = Sample_name, values_from = nReads, values_fill = 0) 

write.csv(species.site.reads, "../final_data/csv_output/taxon_table.csv")
```

```{r}
# give asvs shorter names and store their sequences in a separate slot in the phyloseq
dna <- Biostrings::DNAStringSet(phyloseq::taxa_names(ps))
names(dna) <- phyloseq::taxa_names(ps)
ps <- phyloseq::merge_phyloseq(ps, dna)
phyloseq::taxa_names(ps) <- paste0("ASV", seq(phyloseq::ntaxa(ps)))

# merge asvs by species
ps.sp <- phyloseq::tax_glom(ps, "Species")
#ps.sp = phyloseq::subset_samples(ps.sp, station != "NA")
#ps.sp <- subset_taxa(ps.sp, Species !="Sus scrofa")
#Revove positive control sample
sp.tax <- ps.sp@tax_table@.Data
```

### **2. Read lengths evaluation**

```{r  warning=FALSE}
# Calculate sequence lengths
seq_lengths <- nchar(colnames(seqtab.nochim))
# Create a histogram plot
p<-ggplot2::ggplot(data = data.frame(Length = seq_lengths), ggplot2::aes(x = Length)) +
  ggplot2::geom_histogram(binwidth = 1, fill = "grey", color = "black") +
  labs(title = "Sequence Lengths",
       x = "Sequence Length (bp)",
       y = "Frequency")+
      geom_text(stat = "count", ggplot2::aes(label = ..count..), vjust = -0.5,size=2)
p
```

### **3. ASV evaluation**

Frequency distribution of the sequencing depths per ASV.

```{r warning=FALSE}
tdt = data.table(tax_table(ps.sp),
                 TotalCounts = taxa_sums(ps.sp),
                 asv = phyloseq::taxa_names(ps.sp))
ggplot2::ggplot(tdt, ggplot2::aes(TotalCounts)) + 
  ggplot2::geom_histogram(binwidth = 100000, fill = "grey", color = "black") + 
  ggtitle("ASV sequencing depth")+
   labs(x = "Number of reads", y = "Number of ASVs")
```

### ASV accumulation curve

```{r Taxa accumulation curve}
# taxa cumulative sum
taxcumsum = tdt[, .N, by = TotalCounts]
setkey(taxcumsum, TotalCounts)
taxcumsum[, CumSum := cumsum(N)]
# Define the plot
pCumSum = ggplot2::ggplot(taxcumsum, ggplot2::aes(TotalCounts, CumSum)) + 
  geom_point() +
  xlab("Read counts") +
  ylab("Number of ASVs") +
  ggtitle("ASV accumulation curve")
pCumSum
```

### **4. Diversity indices**

Observed ASV's and Simpson.

```{r warning=FALSE}
stations=md$station
(pAlpha = plot_richness(ps.sp,
                       measures =c("Observed"))+
                        theme_linedraw()+
        theme(axis.title=element_text(size = 7),
        axis.text.y = element_text(vjust = 0.5, hjust=1,size = 7),
        axis.text.x = element_text(angle=90,hjust = 1, size = 4),
        #axis.ticks.x=element_blank(),
        legend.position = "none") +
        facet_wrap(~depth_class,dir = "v",scales="free_x")+
        ggtitle("Observed ASVs")+
        ylab("Value") +
        xlab("Sample_ID")+
        scale_x_discrete(labels = stations)+
        scale_fill_hue(l = 70, c = 150))
```

```{r warning=FALSE}
(pAlpha = plot_richness(ps.sp, x="station",
                       color = "depth_class",
                       measures =c("Simpson"))+
                        theme_linedraw()+
        theme(axis.title=element_text(size = 7),
        axis.text.y = element_text(vjust = 0.5, hjust=1,size = 7),
        axis.text.x = element_text(angle=90,hjust = 1, size = 4),
        axis.ticks.x=element_blank(),
        legend.position = "none") +
        facet_wrap(~depth_class,dir = "v",scales="free_x")+
        ggtitle("Simpson diversity")+
        ylab("Value") +
        xlab("Station")+
        scale_x_discrete(labels = stations)+
        scale_fill_hue(l = 70, c = 150))

```

### **5. Relative abundances of taxonomic groups**

```{r}
ps.sp.prop <- transform_sample_counts(ps.sp, function(x) x/sum(x))
check_df <- as.data.frame(tax_table(ps.sp.prop))
```

```{r}
if(any(check_df$Class=="Actinopteri")){
ps_actinopteri <- subset_taxa(ps.sp.prop, Class == "Actinopteri")
}
```

```{r, warning=FALSE, fig.width=10, fig.height=6}
if(any(check_df$Class=="Actinopteri")){
plot_bar(ps_actinopteri, fill="Order") +
  theme_linedraw()+
  theme(axis.title=element_text(size = 8),
        legend.title = element_text(size = 9),
        axis.text.y = element_text(vjust = 0.5, size = 7),
        axis.ticks.x=element_blank(),
        axis.text.x = element_text(angle=90,hjust = 1, size = 5),
        legend.text = element_text(size = 7),
        legend.key.size = unit(0.3, 'cm'),
        strip.text.x = element_text(size = 7),
        legend.position = "right") +
        facet_wrap(~depth_class, dir = "v",scales="free_x")+
        ggtitle("Actinopteri")+
        ylab("Relative abundance") +
        xlab("Sample")+
        scale_x_discrete(labels = stations)+
        scale_fill_hue(l = 70, c = 150)
}
```

```{r warning=FALSE, fig.width=10, fig.height=6}
if(any(check_df$ Order == "Clupeiformes")){
ps_clupeiformes <- subset_taxa(ps.sp.prop, Order == "Clupeiformes")
plot_bar(ps_clupeiformes, fill="Species") +
  theme_linedraw()+
  theme(axis.title=element_text(size = 8),
        legend.title = element_text(size = 9),
        axis.text.y = element_text(vjust = 0.5, hjust=1,size = 7),
        axis.text.x = element_text(angle=90, hjust=1,size = 5),
        axis.ticks.x=element_blank(),
        legend.text = element_text(size = 7, face = "italic"),
        legend.key.size = unit(0.3, 'cm'),
        legend.position = "right") +
        facet_wrap(~depth_class, dir = "v",scales="free_x")+
        guides(fill=guide_legend(ncol =1))+
        ggtitle("Clupeiformes")+
        ylab("Relative abundance") +
        xlab("Sample")+
        scale_x_discrete(labels = stations)+
        scale_fill_hue(l = 70, c = 150)
}
```

```{r warning=FALSE, fig.width=10, fig.height=6}
if(any(check_df$Order == "Gadiformes")){
ps_salmoniformes <- subset_taxa(ps.sp.prop, Order == "Gadiformes")
plot_bar(ps_salmoniformes, fill="Species") +
  theme_linedraw()+
  theme(axis.title=element_text(size = 8),
        legend.title = element_text(size = 9),
        axis.text.y = element_text(vjust = 0.5, hjust=1,size = 7),
        axis.text.x = element_text(angle=90,vjust = 0.5, hjust=1,size = 5),
        axis.ticks.x=element_blank(),
        legend.text = element_text(size = 7,face = "italic"),
        legend.key.size = unit(0.3, 'cm'),
        legend.position = "right") +
        facet_wrap(~depth_class,dir = "v",scales="free_x")+
        ggtitle("Gadiformes")+
        ylab("Relative abundance") +
        xlab("Sample")+
        scale_x_discrete(labels = stations)+
        scale_fill_hue(l = 70, c = 150)
}
```

```{r, warning=FALSE, fig.width=10, fig.height=6}
if(any(check_df$Order == "Perciformes")){
ps_salmoniformes <- subset_taxa(ps.sp.prop, Order == "Perciformes")
plot_bar(ps_salmoniformes, fill="Species") +
  theme_linedraw()+
  theme(axis.title=element_text(size = 8),
        legend.title = element_text(size = 9),
        axis.text.y = element_text(vjust = 0.5, hjust=1,size = 7),
        axis.text.x = element_text(angle=90,vjust = 0.5, hjust=1,size = 5),
        axis.ticks.x=element_blank(),
        legend.text = element_text(size = 7, face = "italic"),
        legend.key.size = unit(0.3, 'cm'),
        legend.position = "right") +
        facet_wrap(~depth_class,dir = "v",scales="free_x")+
        ggtitle("Perciformes")+
        ylab("Relative abundance") +
        xlab("Sample")+
        scale_x_discrete(labels = stations)+
        scale_fill_hue(l = 70, c = 150)
}
```

```{r, warning=FALSE, fig.width=10, fig.height=6}
if(any(check_df$Order == "Myctophiformes")){
ps_salmoniformes <- subset_taxa(ps.sp.prop, Order == "Myctophiformes")
plot_bar(ps_salmoniformes, fill="Species") +
  theme_linedraw()+
  theme(axis.title=element_text(size = 8),
        legend.title = element_text(size = 9),
        axis.text.y = element_text(vjust = 0.5, hjust=1,size = 7),
        axis.text.x = element_text(angle=90,vjust = 0.5, hjust=1,size = 5),
        axis.ticks.x=element_blank(),
        legend.text = element_text(size = 7,face = "italic"),
        legend.key.size = unit(0.3, 'cm'),
        legend.position = "right") +
        facet_wrap(~depth_class,dir = "v",scales="free_x")+
        ggtitle("Myctophiformes")+
        ylab("Relative abundance") +
        xlab("Sample")+
        scale_x_discrete(labels = stations)+
        scale_fill_hue(l = 70, c = 150)
}
```

```{r, warning=FALSE, fig.width=10, fig.height=6}
if(any(check_df$Order == "Pleuronectiformes")){
ps_salmoniformes <- subset_taxa(ps.sp.prop, Order == "Pleuronectiformes")
plot_bar(ps_salmoniformes, fill="Species") +
  theme_linedraw()+
  theme(axis.title=element_text(size = 8),
        legend.title = element_text(size = 9),
        axis.text.y = element_text(vjust = 0.5, hjust=1,size = 7),
        axis.text.x = element_text(angle=90,vjust = 0.5, hjust=1,size = 5),   
        axis.ticks.x=element_blank(),
        legend.text = element_text(size = 7,face = "italic"),
        legend.key.size = unit(0.3, 'cm'),
        legend.position = "right") +
        facet_wrap(~depth_class,dir = "v",scales="free_x")+
        ggtitle("Pleuronectiformes")+
        ylab("Relative abundance") +
        xlab("Sample")+
        scale_x_discrete(labels = stations)+
        scale_fill_hue(l = 70, c = 150)
}
```

```{r warning=FALSE}
#depth<-md$depth_class
if(any(check_df$Order == "Cetacea")){
ps_cetacea <- subset_taxa(ps.sp.prop, Order == "Cetacea")
plot_bar(ps_cetacea, fill="Species") +
  theme_linedraw()+
  theme(axis.title=element_text(size = 8),
        legend.title = element_text(size = 9),
        axis.text.y = element_text(vjust = 0.5, hjust=1,size = 7),
        axis.ticks.x=element_blank(),
        axis.text.x = element_text(angle=90,vjust = 0.5, hjust=1,size = 5), 
        legend.text = element_text(size = 7),
        legend.key.size = unit(0.3, 'cm'),
        strip.text.x = element_text(size = 7),
        legend.position = "right") +
        facet_wrap(~depth_class,dir = "v",scales="free_x")+
        ggtitle("Cetacea, DLL1")+
        ylab("Relative abundance") +
        xlab("Sample_ID")+
        scale_x_discrete(labels = stations)+
        scale_fill_hue(l = 70, c = 150)
}

```

```{r, warning=FALSE, fig.width=10, fig.height=6}
if(any(check_df$Order=="Cetacea")){
ps_with_myst <- subset_taxa(ps_cetacea, Family == "Balaenopteridae"| Family=="Eschrichtiidae"|Family=="Balaenidae"|Family=="Neobalaenidae")

plot_bar(ps_with_myst, fill="Species") +
  theme_linedraw()+
  theme(axis.title=element_text(size = 8),
        legend.title = element_text(size = 9),
        axis.text.y = element_text(vjust = 0.5, hjust=1,size = 7),
        axis.ticks.x=element_blank(),
        axis.text.x = element_text(angle=90,vjust = 0.5, hjust=1,size = 5), 
        legend.text = element_text(size = 7, face = "italic"),
        legend.key.size = unit(0.3, 'cm'),
        strip.text.x = element_text(size = 7),
        legend.position = "right") +
        facet_wrap(~depth_class,dir = "v",scales="free_x")+
        ggtitle("Mysticetes")+
        ylab("Relative abundance") +
        xlab("Station")+
        scale_x_discrete(labels = stations)+
        scale_fill_hue(l = 70, c = 150)
}
```

```{r warning=FALSE, fig.width=10, fig.height=6}
if(any(check_df$Order == "Cetacea")){
ps_with_odon <- subset_taxa(ps_cetacea, Family == "Monodontidae"|Family == "Delphinidae"|Family == "Phocoenidae"|Family == "Ziphiidae"|Family=="Kogiidae"|Family=="Hyperoodontidae")
plot_bar(ps_with_odon, fill="Species") +
  theme_linedraw()+
  theme(axis.title=element_text(size = 8),
        legend.title = element_text(size = 9),
        axis.text.y = element_text(vjust = 0.5, hjust=1,size = 7),
        axis.ticks.x=element_blank(),
        axis.text.x = element_text(angle=90,vjust = 0.5, hjust=1,size = 5), 
        legend.text = element_text(size = 7, face = "italic"),
        legend.key.size = unit(0.3, 'cm'),
        strip.text.x = element_text(size = 7),
        legend.position = "right") +
        facet_wrap(~depth_class,dir = "v",scales="free_x")+
        ggtitle("Odontocetes")+
        ylab("Relative abundance") +
        xlab("Station")+
        scale_x_discrete(labels = stations)+
        scale_fill_hue(l = 70, c = 150)
}
```

```{r, warning=FALSE,fig.width=10, fig.height=6}
if(any(check_df$Class=="Chondrichthyes")){
ps_chondrichthyes <- subset_taxa(ps.sp.prop, Class == "Chondrichthyes")
plot_bar(ps_chondrichthyes, fill="Species") +
  theme_linedraw()+
  theme(axis.title=element_text(size = 8),
        legend.title = element_text(size = 9),
        axis.text.y = element_text(vjust = 0.5, hjust=1,size = 7),
        axis.ticks.x=element_blank(),
        axis.text.x = element_text(angle=90,vjust = 0.5, hjust=1,size = 5), 
        legend.text = element_text(size = 7, face = "italic"),
        legend.key.size = unit(0.3, 'cm'),
        strip.text.x = element_text(size = 7),
        legend.position = "right") +
        facet_wrap(~depth_class,dir = "v",scales="free_x")+
        ggtitle("Chondrichthyes")+
        ylab("Relative abundance") +
        xlab("Station")+
        scale_x_discrete(labels = stations)+
        scale_fill_hue(l = 70, c = 150)
}
```

### **6. Assigned and Non-assigned taxa**

List of assigned taxa

```{r warnings=FALSE}
(species <- subset_taxa(ps, !is.na(Species)))
# Access the taxonomic table in the phyloseq object
species.taxtable <- as.data.frame(tax_table(species))
species.taxtable$index <- 1:nrow(species.taxtable)
species.taxtable %>%  relocate(index)
# View the taxonomic table
#knitr::kable(species.taxtable)
```

### List of non-assigned taxa

```{r warnings=FALSE}
(na.species <- subset_taxa(ps, is.na(Species)))
# Access the taxonomic table in the phyloseq object
na.species.taxtable <- as.data.frame(tax_table(na.species))
na.species.taxtable$index <- 1:nrow(na.species.taxtable)
na.species.taxtable %>%  relocate(index)
# View the taxonomic table
#knitr::kable(na.species.taxtable)
```

```{r}
#| label: data-save

save(ps, ps.sp, ps.sp.prop, file = "phyloseq_final.Rdata")

```
